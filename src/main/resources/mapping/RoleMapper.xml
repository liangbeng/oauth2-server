<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.wzp.oauth2.mapper.RoleMapper">

    <resultMap id="BaseResultMap" type="org.wzp.oauth2.entity.Role">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, created_time, updated_time, role_name
  </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.wzp.oauth2.entity.Role"
            useGeneratedKeys="true">
    insert into role (created_time, updated_time, role_name
      )
    values (#{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, #{roleName,jdbcType=VARCHAR}
      )
  </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.wzp.oauth2.entity.Role"
            useGeneratedKeys="true">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="updatedTime != null">
                updated_time,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedTime != null">
                #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="org.wzp.oauth2.entity.Role">
        update role
        <set>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="org.wzp.oauth2.entity.Role">
    update role
    set created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      role_name = #{roleName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!-- 条件查询 -->
    <select id="findAllBySome" parameterType="hashMap" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        where 1=1
        <if test="roleName != null and roleName != ''">
            AND role_name Like CONCAT('%',#{roleName, jdbcType=VARCHAR},'%')
        </if>
    </select>

</mapper>